name: CI - Tests

on:
  pull_request:
  push:
    branches:
      - 'main'
      - 'push-action/**'  # Allow pushing to protected branches (using CasperWA/push-protected)

jobs:
  basic:
    name: External
    uses: SINTEF/ci-cd/.github/workflows/ci_tests.yml@v2.9.2
    with:
      # General
      install_extras: "[dev]"

      # pre-commit
      run_pre-commit: false

      # pylint & safety
      python_version_pylint_safety: "3.10"

      run_pylint: false
      run_safety: true

      # Build package
      run_build_package: true
      python_version_package: "3.10"
      build_libs: flit
      build_cmd: flit build

      # Build documentation
      run_build_docs: true
      python_version_docs: "3.10"
      warnings_as_errors: true

      use_mkdocs: true
      update_python_api_ref: true
      update_docs_landing_page: true
      package_dirs: "{{ cookiecutter.package_name }}"
      full_docs_dir: strategies
      landing_page_replacement_separator: ","
      landing_page_replacements: |
        (LICENSE),(LICENSE.md)
        (compose.yml),({{ cookiecutter.scm_url }}/blob/main/compose.yml)
        (pyproject.toml),({{ cookiecutter.scm_url }}/blob/main/pyproject.toml)

  pytest:{% raw %}
    name: pytest (${{ matrix.os[1] }}-py${{ matrix.python-version }})
    runs-on: ${{ matrix.os[0] }}

    strategy:
      fail-fast: false
      matrix:
        os:
        - ["ubuntu-latest", "linux"]
        - ["windows-latest", "windows"]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
{% endraw %}
    - name: Install linux system dependencies
      if: matrix.os[1] == 'linux'
      run: echo "No dependencies defined."

    - name: Install windows system dependencies
      if: matrix.os[1] == 'windows'
      run: echo "No dependencies defined."
      shell: bash

    - name: Install Python dependencies
      run: |
        python -m pip install -U pip
        pip install -U setuptools wheel
        pip install -e .[testing]

    - name: Test with pytest
      run: pytest -vv --cov-report=xml

    - name: Upload coverage to Codecov
      if: github.repository == '{{ cookiecutter.username }}/{{ cookiecutter.project_slug }}'
      uses: codecov/codecov-action@v5
      with:
        token: {{ "${{ secrets.CODECOV_TOKEN }}" }}
        flags: {{ "${{ matrix.os[1] }}" }}
        env_vars: OS,PYTHON
      env:
        OS: {{ "${{ matrix.os[1] }}" }}
        PYTHON: {{ "${{ matrix.python-version }}" }}
