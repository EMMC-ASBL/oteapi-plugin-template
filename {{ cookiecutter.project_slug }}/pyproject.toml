### Installation and source distribution configuration
[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "{{ cookiecutter.project_slug }}"
authors = [
    {name = "{{ cookiecutter.author }}", email = "{{ cookiecutter.email }}"},
]
description = "OTEAPI Plugin."
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    # "Framework :: OTEAPI",
    "Environment :: Plugins",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]
keywords = ["OTE", "OTEAPI"]
requires-python = "~=3.9"
dynamic = ["version"]

dependencies = [
    "oteapi-core >=0.5.1,<1",
    "pydantic >=2,<3",
]

[project.optional-dependencies]
doc = [
    "invoke ~=2.2",
    "mike ~=1.1",
    "mkdocs ~=1.5",
    "mkdocs-awesome-pages-plugin ~=2.9",
    "mkdocs-material ~=9.3",
    "mkdocstrings[python] ~=0.23.0",
]
dev = [
    "invoke ~=2.2",
    "mike ~=1.1",
    "mkdocs ~=1.5",
    "mkdocs-awesome-pages-plugin ~=2.9",
    "mkdocs-material ~=9.3",
    "mkdocstrings[python] ~=0.23.0",
    "pre-commit ~=3.4",
    "pylint ~=2.17",
    "pytest ~=7.4",
    "pytest-cov ~=4.1",
    "tomlkit ~=0.12.1",
]

[project.urls]
Home = "{{ cookiecutter.scm_url }}"
Documentation = "https://{{ cookiecutter.username }}.github.io/{{ cookiecutter.project_slug }}"
Source = "{{ cookiecutter.scm_url }}"
"Issue Tracker" = "{{ cookiecutter.scm_url }}/issues"
Changelog = "{{ cookiecutter.scm_url }}/blob/main/CHANGELOG.md"
Package = "https://pypi.org/project/{{ cookiecutter.project_slug }}"

[project.entry-points."oteapi.download"]
# "{{ cookiecutter.package_name }}.fileDEMO" = "{{ cookiecutter.package_name }}.strategies.download:DemoFileStrategy"
[project.entry-points."oteapi.filter"]
# "{{ cookiecutter.package_name }}.filter/DEMO" = "{{ cookiecutter.package_name }}.strategies.filter:DemoFilter"
[project.entry-points."oteapi.function"]
# "{{ cookiecutter.package_name }}.function/DEMO" = "{{ cookiecutter.package_name }}.strategies.function:DemoFunctionStrategy"
[project.entry-points."oteapi.mapping"]
# "{{ cookiecutter.package_name }}.mapping/DEMO" = "{{ cookiecutter.package_name }}.strategies.mapping:DemoMappingStrategy"
[project.entry-points."oteapi.parse"]
# "{{ cookiecutter.package_name }}.application/jsonDEMO" = "{{ cookiecutter.package_name }}.strategies.parse:DemoJSONDataParseStrategy"
[project.entry-points."oteapi.resource"]
# "{{ cookiecutter.package_name }}.DEMO-access-service" = "{{ cookiecutter.package_name }}.strategies.resource:DemoResourceStrategy"
[project.entry-points."oteapi.transformation"]
# "{{ cookiecutter.package_name }}.script/DEMO" = "{{ cookiecutter.package_name }}.strategies.transformation:DummyTransformationStrategy"

[tool.flit.module]
name = "{{ cookiecutter.package_name }}"

### Dev tools configuration
[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true
scripts_are_modules = true
warn_unused_configs = true
show_error_codes = true
allow_redefinition = true

[tool.pylint.messages_control]
max-line-length = 90
disable = [
    "duplicate-code",
    "no-name-in-module",
    "too-few-public-methods",
    "no-self-argument"
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-rs --cov={{ cookiecutter.package_name }} --cov-report=term --durations=10"
filterwarnings = [
    "ignore:.*imp module.*:DeprecationWarning",
    "ignore:.*_yaml extension module.*:DeprecationWarning"
]
