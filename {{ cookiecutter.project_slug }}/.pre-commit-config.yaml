# To install the git pre-commit hook run:
#   pre-commit install
# To update the pre-commit hooks run:
#   pre-commit autoupdate
# To run the pre-commit hooks manually run:
#   pre-commit run --all-files

# pre-commit.ci
ci:
  autofix_commit_msg: |
      [pre-commit.ci] auto fixes from pre-commit hooks

      For more information, see https://pre-commit.ci
  autofix_prs: false
  autoupdate_branch: 'main'
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: 'weekly'
  skip: []
  submodules: false

# hooks
repos:
  # pre-commit-hooks supplies a multitude of small hooks
  # To get an overview of them all as well as the ones used here, please see
  # https://github.com/pre-commit/pre-commit-hooks#hooks-available
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
    - id: check-json
      name: Check JSON
    - id: check-toml
      name: Check TOML
    - id: check-yaml
      name: Check YAML
    - id: debug-statements
    - id: end-of-file-fixer
      exclude: ^tests/static/.*$
    - id: mixed-line-ending
      exclude: ^CHANGELOG.md$
    - id: name-tests-test
      args: ["--pytest-test-first"]
      exclude: ^tests/static/.*$
    - id: trailing-whitespace
      exclude: ^tests/static/.*$
      args: [--markdown-linebreak-ext=md]

  # Markdown linter to ensure the quality of the documentation
  # More information can be found in its source repository:
  # https://github.com/DavidAnson/markdownlint-cli2
  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: v0.18.1
    hooks:
    - id: markdownlint-cli2
      name: markdownlint
      exclude: ^(docs/)?(CHANGELOG|LICENSE).md$
      args:
      - --fix
      - --config=.markdownlint.yaml

  # Pyupgrade is a code upgrade tool
  # It works on files in-place
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.20.0
    hooks:
    - id: pyupgrade
      args: [--py310-plus]

  # Black is a code style and formatter
  # It works on files in-place
  - repo: https://github.com/ambv/black
    rev: 25.1.0
    hooks:
    - id: black

  # Run black on Python code in documentation strings and files
  - repo: https://github.com/adamchainz/blacken-docs
    rev: 1.19.1
    hooks:
    - id: blacken-docs
      additional_dependencies: [black]

  # ruff is a Python linter, incl. import sorter and formatter
  # It works partly on files in-place
  # More information can be found in its documentation:
  # https://docs.astral.sh/ruff/
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.11
    hooks:
      - id: ruff-check
        name: ruff
        args: ["--fix", "--exit-non-zero-on-fix", "--show-fixes"]

  # Bandit is a security linter
  # More information can be found in its documentation:
  # https://bandit.readthedocs.io/en/latest/
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
    - id: bandit
      args: ["-r"]
      files: ^{{ cookiecutter.package_name }}/.*$

  # mypy is a static typing linter
  # The main code repository can be found at:
  # https://github.com/python/mypy
  # The project's documentation can be found at:
  # https://mypy.readthedocs.io/en/stable/index.html
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
    - id: mypy
      exclude: ^tests/.*$
      additional_dependencies:
        - "pydantic>=2,<3"

  # ci-cd is a collection of hooks to help with CI/CD
  # The main code repository can be found at:
  # https://github.com/SINTEF/ci-cd
  # The project's documentation can be found at:
  # https://SINTEF.github.io/ci-cd/
  - repo: https://github.com/SINTEF/ci-cd
    rev: v2.9.2
    hooks:
    - id: docs-api-reference
      args:
      - "--package-dir={{ cookiecutter.package_name }}"
      - "--docs-folder=docs"
      - "--full-docs-folder=strategies"
    - id: docs-landing-page
      args:
      - "--docs-folder=docs"
      - "--replacement-separator=,"
      - "--replacement=(LICENSE),(LICENSE.md)"
      - "--replacement=(compose.yml),({{ cookiecutter.scm_url }}/blob/main/compose.yml)"
      - "--replacement=(pyproject.toml),({{ cookiecutter.scm_url }}/blob/main/pyproject.toml)"
