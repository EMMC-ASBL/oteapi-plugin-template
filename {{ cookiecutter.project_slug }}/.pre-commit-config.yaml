# To install the git pre-commit hook run:
#   pre-commit install
# To update the pre-commit hooks run:
#   pre-commit autoupdate
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
    - id: end-of-file-fixer
    - id: debug-statements
    - id: check-yaml
      name: Check YAML
    - id: check-toml
      name: Check TOML
    - id: requirements-txt-fixer
      name: Fix requirements*.txt
      files: ^requirements.*\.txt$
    - id: trailing-whitespace
      args: [--markdown-linebreak-ext=md]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.0.292
    hooks:
      - id: ruff
        args: ["--fix", "--exit-non-zero-on-fix"]

  - repo: https://github.com/ambv/black
    rev: 23.9.1
    hooks:
    - id: black

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
    - id: bandit
      args: ["-r"]
      files: ^{{ cookiecutter.package_name }}/.*$

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.6.0
    hooks:
    - id: mypy
      exclude: ^tests/.*$
      additional_dependencies:
        - "pydantic>=2"

  - repo: local
    hooks:
    - id: update-docs-api-reference
      name: Update API Reference in Documentation
      entry: invoke
      args: [create-api-reference-docs, --pre-clean, --pre-commit]
      language: python
      pass_filenames: false
      files: ^{{ cookiecutter.package_name }}/.*\.py$
      description: Update the API Reference documentation, whenever a Python file is touched in the code base.
    - id: update-docs-index
      name: Update Landing Page for Documentation
      entry: invoke
      args: [create-docs-index]
      language: python
      pass_filenames: false
      files: ^README.md$
      description: Update the landing page for the documentation if the source file (README.md) is changed.
