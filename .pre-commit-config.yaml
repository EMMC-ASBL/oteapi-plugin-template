# To install the git pre-commit hook run:
#   pre-commit install
# To update the pre-commit hooks run:
#   pre-commit autoupdate
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.1.0
    hooks:
    - id: end-of-file-fixer
    - id: debug-statements
      exclude: ^{{ cookiecutter.project_slug }}/
    - id: check-yaml
      name: Check YAML
    - id: check-toml
      name: Check TOML
    - id: requirements-txt-fixer
      name: Fix requirements*.txt
      files: ^requirements.*\.txt$
    - id: trailing-whitespace
      args: [--markdown-linebreak-ext=md]

  - repo: https://github.com/timothycrosley/isort
    rev: 5.10.1
    hooks:
    - id: isort
      args: ["--profile", "black", "--filter-files", "--skip-gitignore"]
      exclude: ^{{ cookiecutter.project_slug }}/

  - repo: https://github.com/ambv/black
    rev: 22.1.0
    hooks:
    - id: black
      exclude: ^{{ cookiecutter.project_slug }}/

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.4
    hooks:
    - id: bandit
      args: ["-r"]
      exclude: ^{{ cookiecutter.project_slug }}/

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.941
    hooks:
    - id: mypy
      exclude: ^{{ cookiecutter.project_slug }}/

  - repo: local
    hooks:
    - id: pylint
      name: pylint
      entry: pylint
      args: ["--extension-pkg-whitelist='pydantic'"]
      language: python
      types: [python]
      require_serial: true
      files: ^.*$
      exclude: ^{{ cookiecutter.project_slug }}/
    - id: update-docs-api-reference
      name: Update API Reference in Documentation for Generated Repo
      entry: bash -c 'cd "{{ cookiecutter.project_slug }}" && invoke "$@"' --
      args: [create-api-reference-docs, --pre-clean, --pre-commit]
      language: python
      pass_filenames: false
      files: ^{{ cookiecutter.project_slug }}/{{ cookiecutter.package_name }}/.*\.py$
      description: Update the API Reference documentation, whenever a Python file is touched in the code base.
    - id: update-docs-index
      name: Update Landing Page for Documentation for Generated Repo
      entry: invoke
      args: [-r,  "{{ cookiecutter.project_slug }}", create-docs-index]
      language: python
      pass_filenames: false
      files: ^{{ cookiecutter.project_slug }}/README.md$
      description: Update the landing page for the documentation if the source file (README.md) is changed.
